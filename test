# import tool
# tl=tool.Tool()
# rel=tl.getPearsonClusterResult()
# print("----")
import os,csv
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'

# import TrafficJamPredict
# obj=TrafficJamPredict.TrafficJamPredict()
# initial=0
# with open("data\\train\\I5-N-1205157.csv", "r") as fd:
#     csv_data = csv.reader(fd)
#     tci = [rows[1] for rows in csv_data]
#     tci = tci[1:]
#     tci = [float(num) for num in tci]
#     minValue=10
#     inputNumBest=-1
#     for i in range(50):
#         inputNum=i+5;
#         lossValue=obj.train(tci,inputNum,1,initial,1,"data\\model\\testModel.ckpt","data\\model\\testModel.ckpt",0.0001)
#         print(lossValue)
#         if lossValue<minValue:
#             minValue=lossValue
#             inputNumBest=inputNum
#     print("minValue:"+str(minValue))
#     print("inputNumBest:"+str(inputNumBest))
# obj.readDataAndTrain(modelSavePath="data\\model\\",trainDataFilePath="data\\train\\")
# obj.readDataAndTestAccuracy(modelBasePath="data\\model\\",testDataFilePath="data\\test\\")



##########simulink test


# with open("data\\test\\I5-N-1205157.csv", "r") as fd:
#     csv_data = csv.reader(fd)
#     tci = [rows[1] for rows in csv_data]
#     tci = tci[1:]
#     tci = [float(num) for num in tci]
#     result=[]
#     for i in range(len(tci)-50):
#         result.append(obj.simulink(tci[i:i+50],"data\\AliCloudTrain\\model\\I5-N-1205157.ckpt"))
#     for item in result:
#         print(item)



import TrafficJamPredictLSTM
obj=TrafficJamPredictLSTM.LSTM()
initial=0
minValue=100
minHiddenNum=-1
with open("data\\train\\I5-N-1205157.csv", "r") as fd:
    csv_data = csv.reader(fd)
    tci = [rows[1] for rows in csv_data]
    tci = tci[1:]
    tci = [float(num) for num in tci]
    #for i in range(10):

    hiddenNum =2
    lstmCellNum=1+1
    lossValue=obj.train(tci,20,hiddenNum,lstmCellNum,1,initial,10000,"data\\model\\testModel.ckpt","data\\model\\testModel.ckpt",0.001)
    # if lossValue<minValue:
    #             minValue=lossValue
    #             minHiddenNum=hiddenNum
print("minValue:"+str(minValue))
print("minHiddenNum:"+str(minHiddenNum))

